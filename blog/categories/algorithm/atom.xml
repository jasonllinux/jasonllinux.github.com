<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithm | JPollo]]></title>
  <link href="http://jasonllinux.github.io/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://jasonllinux.github.io/"/>
  <updated>2013-10-07T21:38:40+08:00</updated>
  <id>http://jasonllinux.github.io/</id>
  <author>
    <name><![CDATA[Shen Jie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[设计模式总结]]></title>
    <link href="http://jasonllinux.github.io/blog/2013/05/06/design-pattern/"/>
    <updated>2013-05-06T09:19:00+08:00</updated>
    <id>http://jasonllinux.github.io/blog/2013/05/06/design-pattern</id>
    <content type="html"><![CDATA[<h2 id="section">分类</h2>

<ul>
  <li>Creational Pattern (物件的建立)</li>
  <li>Structural Pattern （物件之间的静态结构）</li>
  <li>Behavioral Pattern  （物件之间的合作行为）</li>
</ul>

<h3 id="creational-pattern">[1]Creational Pattern</h3>

<h4 id="factory-">Factory 工厂模式</h4>

<h4 id="singleton-">Singleton 单例模式</h4>
<p>单例模式貌似是我接触的最早也是用的最多的设计模式<br />
说明： 仅在第一次需要该对象时实例化  <br />
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
#### Prototype 模式 </p>

<h4 id="builder-">Builder 模式</h4>

<h4 id="section-1">职责链模式</h4>
<p>将请求的发送者和请求的处理者解耦
处理者如果处理不了，转向它的successor对象去处理</p>

<h4 id="flywight">享元模式 Flywight</h4>
<p>运用共享技术有效支持大量细粒度对象的服用<br />
状态： 内部状态和外部状态
享元工场 <br />
避免对象生产的浪费</p>

<h4 id="strategy-">Strategy 策略模式</h4>
<p>定义算法族<br />
由Client决定具体选择某种算法  </p>

<h4 id="mediator-">Mediator 中介者模式</h4>
<p>所谓中介者模式就是用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。</p>

<h4 id="facade-">Facade 外观模式</h4>
<p>结构性<br />
为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用<br />
介于Client和内部子系统之间,避免客户与子系统发生耦合  <br />
为子系统创建一个统一的接口</p>

<h4 id="bridge-">Bridge 模式</h4>

<h4 id="adapter-">Adapter 模式</h4>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EM]]></title>
    <link href="http://jasonllinux.github.io/blog/2012/12/26/em/"/>
    <updated>2012-12-26T21:00:00+08:00</updated>
    <id>http://jasonllinux.github.io/blog/2012/12/26/em</id>
    <content type="html"><![CDATA[<p>重新翻开那本宝典</p>

<h3 id="em">隐变量EM参数学习</h3>

<h4 id="section">隐变量</h4>

<ul>
  <li>
    <p>E步骤</p>
  </li>
  <li>
    <p>M步骤</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Algorithm]——几种距离]]></title>
    <link href="http://jasonllinux.github.io/blog/2012/11/11/some-distance/"/>
    <updated>2012-11-11T16:45:00+08:00</updated>
    <id>http://jasonllinux.github.io/blog/2012/11/11/some-distance</id>
    <content type="html"><![CDATA[<p>记录一些平时看到的“距离”。  </p>

<h4 id="section">欧几里得距离</h4>
<p><script type="math/tex">distance =  \sqrt { ({ x }_{ 1 }-{ x }_{ 2 })^{ 2 } + ({ y }_{ 1 }-{ y }_{ 2 })^{ 2 }} </script></p>

<h4 id="manhatan">曼哈顿距离(Manhatan)</h4>
<p>也叫xx距离，<br />
<script type="math/tex">distance = \left| { x }_{ 1 }-{ x }_{ 2 } \right| +\left| { y }_{ 1 }-{ y }_{ 2 } \right| </script></p>

<h4 id="section-1">马氏距离</h4>

<h3 id="p566">海明距离 P566</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Algorithm]——算法复杂度]]></title>
    <link href="http://jasonllinux.github.io/blog/2012/11/05/algorithm-complexity/"/>
    <updated>2012-11-05T16:44:00+08:00</updated>
    <id>http://jasonllinux.github.io/blog/2012/11/05/algorithm-complexity</id>
    <content type="html"><![CDATA[<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>
]]></content>
  </entry>
  
</feed>
